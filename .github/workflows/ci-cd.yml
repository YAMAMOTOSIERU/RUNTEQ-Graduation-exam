name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
          bundler-cache: true
          bundler-version: latest
      - name: Install dependencies
        run: |
          bundle install --jobs 4 --retry 3
      - name: Update parser gem
        run: |
          bundle update --conservative parser
          bundle install
      - name: Setup database
        env:
          RAILS_ENV: test
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load
      - name: Compile assets
        run: bundle exec rails assets:precompile
      - name: Run tests
        run: bundle exec rspec
      - name: Run RuboCop
        continue-on-error: true
        run: |
          bundle exec rubocop -a
          bundle exec rubocop --fail-level fatal
      - name: Run ERB Lint
        env:
          RUBYOPT: -W0
        continue-on-error: true
        run: bundle exec erblint --lint-all .

  lint_check:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.0
          bundler-cache: true
          bundler-version: latest
          cache-version: 4
      - name: Install dependencies
        run: |
          bundle install --jobs 4 --retry 3
      - name: Update parser gem
        run: |
          bundle update --conservative parser
          bundle install
      - name: Debug information
        run: |
          ruby --version
          bundle --version
          bundle config list
          bundle exec erblint --version
          which erblint
          ls -l $(which erblint)
          gem list | grep erb_lint
      - name: Check RuboCop results
        run: bundle exec rubocop --fail-level fatal
      - name: Check ERB Lint results
        env:
          RUBYOPT: -W0
        run: |
          bundle exec erblint --lint-all --format compact .
          bundle exec erblint --lint-all --format json .

  deploy:
    needs: [build, lint_check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "rails-create-ymr"
          heroku_email: "sieru0710@icloud.com"
